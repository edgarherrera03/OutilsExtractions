# -*- coding: utf-8 -*-
"""
/***************************************************************************
 OutilsExtractionsDialog
                                 A QGIS plugin
 Ce plugin vous permet d'exécuter 5 codes différents qui vous permettront d'automatiser l'extraction de couches,  cadastres,  etc
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-05-27
        git sha              : $Format:%H$
        copyright            : (C) 2024 by Edgar HERRERA SANSIVIRINI / Lollier Ingénierie
        email                : herreraedgar117@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
import os 
import sys
from qgis.core import *
from qgis.gui import *
from qgis.PyQt.QtWidgets import *
import qgis.utils
import processing
from osgeo import gdal, osr
import shutil
import numpy as np
from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

from .Codes_interfaces.Topologie_IGN_interface import Topologie
from .Codes_interfaces.Extraction_couches_WFS_interface import ExtractionCouches
from .Codes_interfaces.Extraction_reseaux_secs_interface import ExtractionReseaux
from .Codes_interfaces.Metre_espace_travail_interface import Metre
from .Codes_interfaces.Preextraction_cadastre_interface import PreextractionCadastre
from .Codes_interfaces.extraction_IGN import Faisabilite

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'OutilsExtractions_dialog_base.ui'))


class OutilsExtractionsDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(OutilsExtractionsDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setWindowTitle("Outils Extractions")
        layout = QVBoxLayout()

        self.extraction_cadastres_label = QLabel("""Ce code sert à extraire le cadastre afin de pouvoir tracer précisément l'emprise 
du projet sans avoir à stocker de couche en local et sans ralentir QGIS""")
        self.extraction_cadastres_button = QPushButton("Prextraction Cadastre")
        self.extraction_cadastres_button.setFixedSize(200, 35)
        self.extraction_cadastres_button.clicked.connect(PreextractionCadastre)

        self.extraction_reseaux_label = QLabel("""Ce code sert à extraire les réseaux disponibles dans la base de données
par l'emprise du projet. Il crée aussi un script d'import Mensura qui peut 
être utilisé pour importer automatiquement les résultats. 
D'autres types de réseaux peuvent être rajoutés dans la base de données au format .shp""")
        self.extraction_reseaux_button = QPushButton("Extraction Reseaux")
        self.extraction_reseaux_button.setFixedSize(200, 35)
        self.extraction_reseaux_button.clicked.connect(ExtractionReseaux)

        self.extraction_couches_label = QLabel("""Ce code sert à extraire les couches shapefiles depuis le serveurs IGN 
 sans avoir à stocker de couche en local et sans ralentir QGIS""")
        self.extraction_couches_button = QPushButton("Extraction Couches WFS")
        self.extraction_couches_button.setFixedSize(200, 35)
        self.extraction_couches_button.clicked.connect(ExtractionCouches)

        self.metre_espace_label = QLabel("""Ce code sert à découper toutes les couches shapefile présentent dans l'instance
du projet par la couche de découpe d'emprises et la couche de parcelles afin 
d'obtenir les quantités dans deux fichiers Excel""")
        self.metre_espace_button = QPushButton("Metre rapide")
        self.metre_espace_button.setFixedSize(200, 35)
        self.metre_espace_button.clicked.connect(Metre)

        self.topologie_IGN_label = QLabel(""" Ce code sert à importer la topographie (c’est-à-dire l’altimétrie) d’un
site sur Mensura en utilisant QGIS. Il permet l’export de la topographie dans n’importe quel système
de coordonnées bien qu’il faille passer par le Lambert 93 impérativement. """)
        self.topologie_IGN_button = QPushButton("Topologie IGN")
        self.topologie_IGN_button.setFixedSize(200, 35)
        self.topologie_IGN_button.clicked.connect(Topologie)

        self.Faisabilite_label = QLabel(""" Cette fonction permet d'extraire les vues cartographiques des différents éléments
nécessaires à l'étude d'un périmètre donné. Le but est de fournir un état initial 
pour l'étude de faisabilité. """)
        self.Faisabilite_button = QPushButton("État Initial - Faisabilite")
        self.Faisabilite_button.setFixedSize(200, 35)
        self.Faisabilite_button.clicked.connect(Faisabilite)

        self.buttons = QDialogButtonBox(QDialogButtonBox.Close)
        self.buttons.rejected.connect(self.reject)

        self.resize(350, 400)
        layout.addWidget(self.extraction_cadastres_label)
        layout.addSpacing(10)
        layout.addWidget(self.extraction_cadastres_button)
        
        layout.addSpacing(20)  
        layout.addWidget(self.extraction_reseaux_label)
        layout.addSpacing(10)
        layout.addWidget(self.extraction_reseaux_button)

        layout.addSpacing(20)
        layout.addWidget(self.extraction_couches_label)
        layout.addSpacing(10)
        layout.addWidget(self.extraction_couches_button)

        layout.addSpacing(20)
        layout.addWidget(self.metre_espace_label)
        layout.addSpacing(10)
        layout.addWidget(self.metre_espace_button)

        layout.addSpacing(20)
        layout.addWidget(self.topologie_IGN_label)
        layout.addSpacing(10)
        layout.addWidget(self.topologie_IGN_button)

        layout.addSpacing(20)
        layout.addWidget(self.Faisabilite_label)
        layout.addSpacing(10)
        layout.addWidget(self.Faisabilite_button)

        layout.addStretch(1)
        layout.addWidget(self.buttons)
        self.setLayout(layout)
    
    
    
